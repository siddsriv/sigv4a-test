import { ChecksumConstructor, HashConstructor } from "@smithy/types";
/**
 * Create a string describing the scope of credentials used to sign a request. * @param shortDate
 * @param shortDate The current calendar date in the form YYYYMMDD.
 * @param service   The service to which the signed request is being sent.
 */
export declare const createSigV4aScope: (shortDate: string, service: string) => string;
/**
 * @internal
 */
export declare const clearCredentialCache: () => void;
export declare const getSigV4aSigningKey: (sha256: ChecksumConstructor | HashConstructor, accessKey: string, secretKey: string) => Promise<Uint8Array>;
/**
 * Build the signing key request. Implementation copied from .NET implementation
 * @param bufferInput Input string. Will append values and return as new string
 * @param accessKey Access key used for signing
 * @param counter Trial number
 */
export declare const buildFixedInputBuffer: (bufferInput: string, accessKey: string, counter: number) => string;
/**
 * Check if calculated value is larger than NMinus2 constant
 * @param value Array in Big-Endian format
 */
export declare const isBiggerThanNMinus2: (value: Uint8Array) => boolean;
/**
 * Adds one to a big-endian number
 * @param value Big-endian formatted number
 */
export declare const addOneToArray: (value: Uint8Array) => Uint8Array;
